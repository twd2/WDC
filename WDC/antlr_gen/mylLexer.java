// Generated from myl.g4 by ANTLR 4.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class mylLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__19=1, T__18=2, T__17=3, T__16=4, T__15=5, T__14=6, T__13=7, T__12=8, 
		T__11=9, T__10=10, T__9=11, T__8=12, T__7=13, T__6=14, T__5=15, T__4=16, 
		T__3=17, T__2=18, T__1=19, T__0=20, TYPE=21, ID=22, INT=23, COMM_BLOCK=24, 
		LINE_COMM=25, NEWLINE=26, CHAR=27, STRING=28, CONST=29, TRUE=30, FALSE=31, 
		LET=32, EQU=33, GT=34, SHR=35, GTE=36, LT=37, SHL=38, LTE=39, MOD=40, 
		ADD=41, SUB=42, MUL=43, DIV=44, AND=45, OR=46, NOT=47, NEQU=48, XOR=49, 
		SEM=50, WS=51;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'on_interrupt'", "']'", "'&'", "')'", "','", "'while'", "'['", "'for'", 
		"'('", "'uses'", "'if'", "'--'", "'continue'", "'return'", "'asm'", "'{'", 
		"'break'", "'else'", "'}'", "'++'", "TYPE", "ID", "INT", "COMM_BLOCK", 
		"LINE_COMM", "NEWLINE", "CHAR", "STRING", "CONST", "'true'", "'false'", 
		"'='", "'=='", "'>'", "'>>'", "GTE", "'<'", "'<<'", "LTE", "'%'", "'+'", 
		"'-'", "'*'", "'/'", "AND", "OR", "NOT", "NEQU", "XOR", "';'", "WS"
	};
	public static final String[] ruleNames = {
		"T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", 
		"T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", 
		"T__2", "T__1", "T__0", "TYPE", "ID", "INT", "COMM_BLOCK", "LINE_COMM", 
		"NEWLINE", "CHAR", "STRING", "CONST", "TRUE", "FALSE", "LET", "EQU", "GT", 
		"SHR", "GTE", "LT", "SHL", "LTE", "MOD", "ADD", "SUB", "MUL", "DIV", "AND", 
		"OR", "NOT", "NEQU", "XOR", "SEM", "WS"
	};


	public mylLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "myl.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 23: COMM_BLOCK_action((RuleContext)_localctx, actionIndex); break;

		case 24: LINE_COMM_action((RuleContext)_localctx, actionIndex); break;

		case 25: NEWLINE_action((RuleContext)_localctx, actionIndex); break;

		case 50: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void LINE_COMM_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3: skip();  break;
		}
	}
	private void COMM_BLOCK_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}
	private void NEWLINE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2\65\u0160\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4"+
		"\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3"+
		"\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16"+
		"\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20"+
		"\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23"+
		"\3\23\3\23\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26"+
		"\3\26\3\26\5\26\u00c7\n\26\3\27\3\27\7\27\u00cb\n\27\f\27\16\27\u00ce"+
		"\13\27\3\30\6\30\u00d1\n\30\r\30\16\30\u00d2\3\31\3\31\3\31\3\31\7\31"+
		"\u00d9\n\31\f\31\16\31\u00dc\13\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32"+
		"\3\32\3\32\7\32\u00e7\n\32\f\32\16\32\u00ea\13\32\3\32\3\32\3\32\3\32"+
		"\3\33\5\33\u00f1\n\33\3\33\6\33\u00f4\n\33\r\33\16\33\u00f5\3\33\3\33"+
		"\3\34\3\34\3\34\3\34\5\34\u00fe\n\34\3\34\3\34\3\35\3\35\3\35\3\35\7\35"+
		"\u0106\n\35\f\35\16\35\u0109\13\35\3\35\3\35\3\36\3\36\5\36\u010f\n\36"+
		"\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3\"\3\"\3\"\3#\3#\3"+
		"$\3$\3$\3%\3%\3%\3%\5%\u012a\n%\3&\3&\3\'\3\'\3\'\3(\3(\3(\3(\5(\u0135"+
		"\n(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3.\5.\u0144\n.\3/\3/\3/\5/\u0149"+
		"\n/\3\60\3\60\3\61\3\61\3\61\3\61\5\61\u0151\n\61\3\62\3\62\3\62\5\62"+
		"\u0156\n\62\3\63\3\63\3\64\6\64\u015b\n\64\r\64\16\64\u015c\3\64\3\64"+
		"\5\u00da\u00e8\u0107\65\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21"+
		"\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1"+
		"%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\2\63\33\3\65\34\4\67\35\1"+
		"9\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1"+
		"Y.\1[/\1]\60\1_\61\1a\62\1c\63\1e\64\1g\65\5\3\2\b\5\2C\\aac|\6\2\62;"+
		"C\\aac|\3\2\62;\7\2$$^^ppttvv\4\2##\u0080\u0080\5\2\13\f\17\17\"\"\u0171"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3"+
		"\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\3i\3\2\2\2\5v\3\2\2\2\7x\3\2\2"+
		"\2\tz\3\2\2\2\13|\3\2\2\2\r~\3\2\2\2\17\u0084\3\2\2\2\21\u0086\3\2\2\2"+
		"\23\u008a\3\2\2\2\25\u008c\3\2\2\2\27\u0091\3\2\2\2\31\u0094\3\2\2\2\33"+
		"\u0097\3\2\2\2\35\u00a0\3\2\2\2\37\u00a7\3\2\2\2!\u00ab\3\2\2\2#\u00ad"+
		"\3\2\2\2%\u00b3\3\2\2\2\'\u00b8\3\2\2\2)\u00ba\3\2\2\2+\u00c6\3\2\2\2"+
		"-\u00c8\3\2\2\2/\u00d0\3\2\2\2\61\u00d4\3\2\2\2\63\u00e2\3\2\2\2\65\u00f3"+
		"\3\2\2\2\67\u00f9\3\2\2\29\u0101\3\2\2\2;\u010e\3\2\2\2=\u0110\3\2\2\2"+
		"?\u0115\3\2\2\2A\u011b\3\2\2\2C\u011d\3\2\2\2E\u0120\3\2\2\2G\u0122\3"+
		"\2\2\2I\u0129\3\2\2\2K\u012b\3\2\2\2M\u012d\3\2\2\2O\u0134\3\2\2\2Q\u0136"+
		"\3\2\2\2S\u0138\3\2\2\2U\u013a\3\2\2\2W\u013c\3\2\2\2Y\u013e\3\2\2\2["+
		"\u0143\3\2\2\2]\u0148\3\2\2\2_\u014a\3\2\2\2a\u0150\3\2\2\2c\u0155\3\2"+
		"\2\2e\u0157\3\2\2\2g\u015a\3\2\2\2ij\7q\2\2jk\7p\2\2kl\7a\2\2lm\7k\2\2"+
		"mn\7p\2\2no\7v\2\2op\7g\2\2pq\7t\2\2qr\7t\2\2rs\7w\2\2st\7r\2\2tu\7v\2"+
		"\2u\4\3\2\2\2vw\7_\2\2w\6\3\2\2\2xy\7(\2\2y\b\3\2\2\2z{\7+\2\2{\n\3\2"+
		"\2\2|}\7.\2\2}\f\3\2\2\2~\177\7y\2\2\177\u0080\7j\2\2\u0080\u0081\7k\2"+
		"\2\u0081\u0082\7n\2\2\u0082\u0083\7g\2\2\u0083\16\3\2\2\2\u0084\u0085"+
		"\7]\2\2\u0085\20\3\2\2\2\u0086\u0087\7h\2\2\u0087\u0088\7q\2\2\u0088\u0089"+
		"\7t\2\2\u0089\22\3\2\2\2\u008a\u008b\7*\2\2\u008b\24\3\2\2\2\u008c\u008d"+
		"\7w\2\2\u008d\u008e\7u\2\2\u008e\u008f\7g\2\2\u008f\u0090\7u\2\2\u0090"+
		"\26\3\2\2\2\u0091\u0092\7k\2\2\u0092\u0093\7h\2\2\u0093\30\3\2\2\2\u0094"+
		"\u0095\7/\2\2\u0095\u0096\7/\2\2\u0096\32\3\2\2\2\u0097\u0098\7e\2\2\u0098"+
		"\u0099\7q\2\2\u0099\u009a\7p\2\2\u009a\u009b\7v\2\2\u009b\u009c\7k\2\2"+
		"\u009c\u009d\7p\2\2\u009d\u009e\7w\2\2\u009e\u009f\7g\2\2\u009f\34\3\2"+
		"\2\2\u00a0\u00a1\7t\2\2\u00a1\u00a2\7g\2\2\u00a2\u00a3\7v\2\2\u00a3\u00a4"+
		"\7w\2\2\u00a4\u00a5\7t\2\2\u00a5\u00a6\7p\2\2\u00a6\36\3\2\2\2\u00a7\u00a8"+
		"\7c\2\2\u00a8\u00a9\7u\2\2\u00a9\u00aa\7o\2\2\u00aa \3\2\2\2\u00ab\u00ac"+
		"\7}\2\2\u00ac\"\3\2\2\2\u00ad\u00ae\7d\2\2\u00ae\u00af\7t\2\2\u00af\u00b0"+
		"\7g\2\2\u00b0\u00b1\7c\2\2\u00b1\u00b2\7m\2\2\u00b2$\3\2\2\2\u00b3\u00b4"+
		"\7g\2\2\u00b4\u00b5\7n\2\2\u00b5\u00b6\7u\2\2\u00b6\u00b7\7g\2\2\u00b7"+
		"&\3\2\2\2\u00b8\u00b9\7\177\2\2\u00b9(\3\2\2\2\u00ba\u00bb\7-\2\2\u00bb"+
		"\u00bc\7-\2\2\u00bc*\3\2\2\2\u00bd\u00be\7k\2\2\u00be\u00bf\7p\2\2\u00bf"+
		"\u00c7\7v\2\2\u00c0\u00c1\7f\2\2\u00c1\u00c2\7q\2\2\u00c2\u00c3\7w\2\2"+
		"\u00c3\u00c4\7d\2\2\u00c4\u00c5\7n\2\2\u00c5\u00c7\7g\2\2\u00c6\u00bd"+
		"\3\2\2\2\u00c6\u00c0\3\2\2\2\u00c7,\3\2\2\2\u00c8\u00cc\t\2\2\2\u00c9"+
		"\u00cb\t\3\2\2\u00ca\u00c9\3\2\2\2\u00cb\u00ce\3\2\2\2\u00cc\u00ca\3\2"+
		"\2\2\u00cc\u00cd\3\2\2\2\u00cd.\3\2\2\2\u00ce\u00cc\3\2\2\2\u00cf\u00d1"+
		"\t\4\2\2\u00d0\u00cf\3\2\2\2\u00d1\u00d2\3\2\2\2\u00d2\u00d0\3\2\2\2\u00d2"+
		"\u00d3\3\2\2\2\u00d3\60\3\2\2\2\u00d4\u00d5\7\61\2\2\u00d5\u00d6\7,\2"+
		"\2\u00d6\u00da\3\2\2\2\u00d7\u00d9\13\2\2\2\u00d8\u00d7\3\2\2\2\u00d9"+
		"\u00dc\3\2\2\2\u00da\u00db\3\2\2\2\u00da\u00d8\3\2\2\2\u00db\u00dd\3\2"+
		"\2\2\u00dc\u00da\3\2\2\2\u00dd\u00de\7,\2\2\u00de\u00df\7\61\2\2\u00df"+
		"\u00e0\3\2\2\2\u00e0\u00e1\b\31\2\2\u00e1\62\3\2\2\2\u00e2\u00e3\7\61"+
		"\2\2\u00e3\u00e4\7\61\2\2\u00e4\u00e8\3\2\2\2\u00e5\u00e7\13\2\2\2\u00e6"+
		"\u00e5\3\2\2\2\u00e7\u00ea\3\2\2\2\u00e8\u00e9\3\2\2\2\u00e8\u00e6\3\2"+
		"\2\2\u00e9\u00eb\3\2\2\2\u00ea\u00e8\3\2\2\2\u00eb\u00ec\5\65\33\2\u00ec"+
		"\u00ed\3\2\2\2\u00ed\u00ee\b\32\3\2\u00ee\64\3\2\2\2\u00ef\u00f1\7\17"+
		"\2\2\u00f0\u00ef\3\2\2\2\u00f0\u00f1\3\2\2\2\u00f1\u00f2\3\2\2\2\u00f2"+
		"\u00f4\7\f\2\2\u00f3\u00f0\3\2\2\2\u00f4\u00f5\3\2\2\2\u00f5\u00f3\3\2"+
		"\2\2\u00f5\u00f6\3\2\2\2\u00f6\u00f7\3\2\2\2\u00f7\u00f8\b\33\4\2\u00f8"+
		"\66\3\2\2\2\u00f9\u00fd\7$\2\2\u00fa\u00fb\7^\2\2\u00fb\u00fe\t\5\2\2"+
		"\u00fc\u00fe\13\2\2\2\u00fd\u00fa\3\2\2\2\u00fd\u00fc\3\2\2\2\u00fe\u00ff"+
		"\3\2\2\2\u00ff\u0100\7$\2\2\u01008\3\2\2\2\u0101\u0107\7$\2\2\u0102\u0103"+
		"\7^\2\2\u0103\u0106\t\5\2\2\u0104\u0106\13\2\2\2\u0105\u0102\3\2\2\2\u0105"+
		"\u0104\3\2\2\2\u0106\u0109\3\2\2\2\u0107\u0108\3\2\2\2\u0107\u0105\3\2"+
		"\2\2\u0108\u010a\3\2\2\2\u0109\u0107\3\2\2\2\u010a\u010b\7$\2\2\u010b"+
		":\3\2\2\2\u010c\u010f\5=\37\2\u010d\u010f\5? \2\u010e\u010c\3\2\2\2\u010e"+
		"\u010d\3\2\2\2\u010f<\3\2\2\2\u0110\u0111\7v\2\2\u0111\u0112\7t\2\2\u0112"+
		"\u0113\7w\2\2\u0113\u0114\7g\2\2\u0114>\3\2\2\2\u0115\u0116\7h\2\2\u0116"+
		"\u0117\7c\2\2\u0117\u0118\7n\2\2\u0118\u0119\7u\2\2\u0119\u011a\7g\2\2"+
		"\u011a@\3\2\2\2\u011b\u011c\7?\2\2\u011cB\3\2\2\2\u011d\u011e\7?\2\2\u011e"+
		"\u011f\7?\2\2\u011fD\3\2\2\2\u0120\u0121\7@\2\2\u0121F\3\2\2\2\u0122\u0123"+
		"\7@\2\2\u0123\u0124\7@\2\2\u0124H\3\2\2\2\u0125\u0126\7@\2\2\u0126\u012a"+
		"\7?\2\2\u0127\u0128\7?\2\2\u0128\u012a\7@\2\2\u0129\u0125\3\2\2\2\u0129"+
		"\u0127\3\2\2\2\u012aJ\3\2\2\2\u012b\u012c\7>\2\2\u012cL\3\2\2\2\u012d"+
		"\u012e\7>\2\2\u012e\u012f\7>\2\2\u012fN\3\2\2\2\u0130\u0131\7>\2\2\u0131"+
		"\u0135\7?\2\2\u0132\u0133\7?\2\2\u0133\u0135\7>\2\2\u0134\u0130\3\2\2"+
		"\2\u0134\u0132\3\2\2\2\u0135P\3\2\2\2\u0136\u0137\7\'\2\2\u0137R\3\2\2"+
		"\2\u0138\u0139\7-\2\2\u0139T\3\2\2\2\u013a\u013b\7/\2\2\u013bV\3\2\2\2"+
		"\u013c\u013d\7,\2\2\u013dX\3\2\2\2\u013e\u013f\7\61\2\2\u013fZ\3\2\2\2"+
		"\u0140\u0141\7(\2\2\u0141\u0144\7(\2\2\u0142\u0144\7(\2\2\u0143\u0140"+
		"\3\2\2\2\u0143\u0142\3\2\2\2\u0144\\\3\2\2\2\u0145\u0146\7~\2\2\u0146"+
		"\u0149\7~\2\2\u0147\u0149\7~\2\2\u0148\u0145\3\2\2\2\u0148\u0147\3\2\2"+
		"\2\u0149^\3\2\2\2\u014a\u014b\t\6\2\2\u014b`\3\2\2\2\u014c\u014d\7#\2"+
		"\2\u014d\u0151\7?\2\2\u014e\u014f\7\u0080\2\2\u014f\u0151\7?\2\2\u0150"+
		"\u014c\3\2\2\2\u0150\u014e\3\2\2\2\u0151b\3\2\2\2\u0152\u0153\7`\2\2\u0153"+
		"\u0156\7`\2\2\u0154\u0156\7`\2\2\u0155\u0152\3\2\2\2\u0155\u0154\3\2\2"+
		"\2\u0156d\3\2\2\2\u0157\u0158\7=\2\2\u0158f\3\2\2\2\u0159\u015b\t\7\2"+
		"\2\u015a\u0159\3\2\2\2\u015b\u015c\3\2\2\2\u015c\u015a\3\2\2\2\u015c\u015d"+
		"\3\2\2\2\u015d\u015e\3\2\2\2\u015e\u015f\b\64\5\2\u015fh\3\2\2\2\25\2"+
		"\u00c6\u00cc\u00d2\u00da\u00e8\u00f0\u00f5\u00fd\u0105\u0107\u010e\u0129"+
		"\u0134\u0143\u0148\u0150\u0155\u015c";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}